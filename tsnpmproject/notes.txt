npm init -y
npm install typescript --save-dev
npm install @types/node --save-dev			 to provide global execution scope for node api's likefile,path ,access
npx tsc --init 			                    generate tsconfig.json
npx tsc 				                    compile ts code and generate jscode
npm install --save-dev ts-node nodemon  	ts-node-to run tscode directly without compileing into jscode 
                                             nodemon (optional)-restart terminal when changes made in the code
scripts": {
    "start": "tsc && node build/index.js",----executes anyone of the format based on the file extension
    "test": "echo \"Error: no test specified\" && exit 1",
    "start:dev": "nodemon" ---------to run the nodemon dependency
}
BASIC TSC FUNCTIONALITIES
{
  "compilerOptions": {
    "target": "es5",            /* Specify ECMAScript target version: 'ES3' (default), 'ES5', 'ES2015', 'ES2016', 'ES2017', 'ES2018', 'ES2019', 'ES2020', 'ES2021', or 'ESNEXT'. */                     
    "module": "commonjs",       /* Specify module code generation: 'none', 'commonjs', 'amd', 'system', 'umd', 'es2015', 'es2020', or 'ESNext'. */
    "lib": ["es6"],             /* Specify library files to be included in the compilation. */
    "allowJs": true,            /* Allow javascript files to be compiled. */
    "outDir": "./build",        /* converted js code saved in this location Redirect output structure to the directory. */
    //"rootDir": "./src",       /* Specify the root directory of source files location . if include is provided its optional */
    "strict": true,             /* Enable all strict type-checking options. */
    "noImplicitAny": true,      /* Raise error on expressions and declarations with an implied 'any' type. */
    "esModuleInterop": true,    /* if commonjs module used it is compulsory enabled .Enables emit interoperability between CommonJS and ES Modules via creation of namespace objects for all imports. Implies 'allowSyntheticDefaultImports'. */
    "resolveJsonModule": true,  /*if json has to be used in project this function has to be enabled*/
  
  },
  "include": [     ---- provide the needed source folders
    "src/**/*"
  ],
  "exclude" : [ -----provide the folderswhich has to be excluded
    "src/**/*.spec.ts"
  ]
}